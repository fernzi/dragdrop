name: AppImage Release

on:
  push:
    tags:
      - v*

jobs:
  build:
    name: Linux x86_64 (Release)
    runs-on: ubuntu-latest
    container: debian:oldstable-slim

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y \
            build-essential qtbase5-dev python3-pip p7zip-full unzip curl
          curl -sLOC- 'http://http.us.debian.org/debian/pool/main/x/xcb-util/libxcb-util1_0.4.0-1+b1_amd64.deb'
          dpkg -i libxcb-util1*.deb

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          install-deps: false
          cache: true
          setup-python: false

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Determine version
        run:  printf 'VERSION=%s\n' "${GITHUB_REF##*/v}" >> "${GITHUB_ENV}"

      - name: Build
        run:  etc/script/build

      - name: Package
        id:   package
        env:
          APPIMAGE_EXTRACT_AND_RUN: 1
        run:  etc/script/package

      - uses: actions/upload-artifact@v3
        with:
          name: AppImage
          path: DragDrop-*.AppImage*

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Inspect downloaded artifacts
        run:  ls -lFR

      - name: Determine version
        run:  printf 'VERSION=%s\n'
          $(echo AppImage/DragDrop-*.AppImage | cut -f2 -d-) >> "${GITHUB_ENV}"

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: DragDrop ${{ env.VERSION }}
          artifacts: AppImage/DragDrop-*.AppImage*
          token: ${{ secrets.GITHUB_TOKEN }}
