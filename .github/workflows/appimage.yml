name: Build AppImage

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'doc/**'
      - '**.md'
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'doc/**'
      - '**.md'

jobs:
  build-appimage:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache Qt
        id:   cache-qt
        uses: actions/cache@v3
        with:
          path: ${{ runner.workspace }}/Qt
          key: ${{ runner.os }}-QtCache

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - name: Install Dependencies
        run:  sudo apt-get install -y ninja-build

      - name: Configure
        run:  cmake -S . -B build
          -G Ninja
          --install-prefix /usr
          -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run:  cmake --build build
      - name: Install
        run:  DESTDIR=appdir cmake --install build

      - name: Package
        id:   pack-appimage
        run: |
          export VERSION="r$(git rev-list --count @).$(git rev-parse --short @)"
          if git describe >/dev/null 2>&1; then
            VERSION="$(git describe --long | sed 's/^v//;s/-/.r/;s/-/./')"
          fi
          curl -JLso ldqt 'https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage'
          chmod a+x ldqt
          ./ldqt appdir/usr/share/applications/*.desktop -appimage
          printf '::set-output name=appimage::%s' *.AppImage
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.pack-appimage.outputs.appimage }}
          path: ${{ steps.pack-appimage.outputs.appimage }}
